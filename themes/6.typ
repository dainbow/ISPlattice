#import "../conf.typ": *

= О SVP

#definition(title: "Задача поиска CVP")[
  Найти вектор решётки $x in Lambda$, минимизирующий величину $norm(x - t)$.
]

#definition(title: "Задача оптимизации CVP")[
  Найти минимум $norm(x - t)$ по всем $x in Lambda$
]

#definition(title: "Задача распознавания")[
  По заданному рациональному числу $r > 0$ определить, существует ли вектор решётки $x$, для которого $norm(x - t) <= r$.
]

#theorem[
  Пусть $cal(A)$ -- оракул, решающий распознавательный вариант задачи CVP. Тогда существует полиномиальный алгоритм с оракулом $cal(A)$ для решения задачи поиска для CVP.
]

#proof[
  На вход алгоритма подаются решётка $B in ZZ^(n times m)$ и вектор $t in ZZ^n$. Требуется найти вектор $x = (x_1, ..., x_m)$, такой, что
  #eq[
    $norm(B x - t) = min_(y in angle.l B angle.r) norm(t - y)$
  ]
  Рассмотрим решётку $B' = [2 b_1, b_2, ..., b_m]$. Заметим, что
  #eq[
    $L(B') subset L(B) => rho(t, angle.l B angle.r) <= rho(t, angle.l B' angle.r)$
  ]
  Чтобы проверить, выполняется ли строгое неравенство, воспользуемся оракулом $cal(A)$.

  БОО, можно считать, что $t in overline(B)$. Иначе, вычтем из вектора его проекцию на $B$, не уменьшив расстояние.
  Воспользовавшись бинарным поиском и оракулом $cal(A)$ найдём за полиномиальное время такое целое $r$, для которого выполняются неравенства
  #eq[
    $r < rho(t, angle.l B angle.r) <= r + 1$
  ]
  Обратимся теперь к оракулу $cal(A)$ на входе $(B', t, op("ratapp")(sqrt(r + 1)))$, где $op("ratapp")(sqrt(r))$ -- рациональное число из полуинтервала $(sqrt(r), sqrt(r + 1)]$.

  В случае ответа NO, выполняются неравенства
  #eq[
    $rho(t, angle.l B' angle.r) > sqrt(r + 1) >= rho(t, angle.l B angle.r)$
  ]
  В случае же ответа YES выполняются неравенства
  #eq[
    $sqrt(r) < rho(t, angle.l B angle.r) <= rho(t, angle.l B' angle.r) <= sqrt(r + 1)$
  ]
  и следовательно, $rho(t, angle.l B angle.r) = rho(t, angle.l B' angle.r)$, поскольку оба числа целые.

  Заметим теперь, что если для некоторого ближайшего к $t$ вектора $x$ координата $x_1$ чётная, то $rho(t, angle.l B angle.r) = rho(t, angle.l B' angle.r)$, если же координата $x_1$ нечётна для всех ближайших векторов $x$, то $rho(t, angle.l B angle.r) < rho(t, angle.l B' angle.r)$.

  Поэтому результат сравнения величин $rho(t, angle.l B angle.r), rho(t, angle.l B' angle.r)$ позволяет определить чётность координаты $x_1$ для некоторого ближайшего ветора $B x$.

  Теперь, зная младщий бит координаты $x_1$ для некоторого ближайшего вектора, найдём следующие по значению биты этой координаты с помощью следующей процедуры.

  Положим $t' = t - epsilon b_1$, где $epsilon = 0$ для выбора чётного бита и $epsilon = 1$ в случае нечётного.

  Применяем теперь описанную процедуру для решётки $B'$ и вектора $t'$. Отметим, что число требуемых шагов оценивается при помощи правила Крамера и полиномиально относительно размера входа $(B, t)$.
]

#corollary[
  Три варианта задачи CVP -- полиномиально эквивалентны.
]

#definition(title: "Базовые понятия теории сложностей")[
  Пусть имеется алфавит $Sigma$ и множество строк $Sigma^* = union_(n = 0)^oo Sigma^n$.

  Пусть задано подмножество $L subset Sigma^*$ называемое *языком*. Для заданного элемента $sigma in Sigma^*$ требуется определить, принадлежит ли он этому языку.

  Класс задач, для которых задача распознавания может быть решена полиномиальным алгоритмом, называется *полиномиально разрешимым классом* задач, или *классом P*.

  Язык $L$ принадлежит *классу NP*, если существует такое подмножество $R subset Sigma^* times Sigma^*$, что принадлежность $(x, y) in R$ проверяется за полиномиальное время от длины $x$ и для каждого $x in L$ существует $y$, что $(x, y) in R$.
]

#definition(title: "Сводимость по Карпу")[
  Пусть имеются две задачи распознавания $A$ и $B$. Полиномиально вычислимая функция $F: Sigma^* -> Sigma^*$ называется *сведением по Карпу* задачи $A$ к задаче $B$, если принадлежность $x in A$ эквивалентна условию $f(x) in B$.

  Задача распознавания $A$ называется NP-трудной, если любая другая задача $B$ из класса NP сводится к задаче A.

  Если A находится в классе NP, то она называется NP-полной.
]

#definition(title: "Задача о рюкзаке")[
  Пусть заданы $n + 1$ целых чисел ${a_1, ..., a_n, s}$. Найти подмножество $J subset {1, ..., n}$, для которого $sum_(i in J) a_i = s$.

  Задача распознавания KP заключается в проверке существования такого подмножества $J$.
]

#theorem[
  Задача распознавания KP является NP-полной.
]

#theorem[
  Для всех $p >= 1$ задача распознавания CVP является NP-полной для любой нормы $l_p$.
]

#proof[
  Задача CVP, очевидно, принадлежит классу NP. Достаточно продемонстрировать полиномиальную сводимость распознавательного варианта задачи KP к распознавательному варианту задачи CVP.

  Пусть требуется решить задачу KP на входе ${a_1, ..., a_n, s}$. Определим векторы $b_i, t$ формулами
  #eq[
    $b_i = (a_i, underbrace(0\, ...\, 0, i - 1), 2, underbrace(0\, ...\, 0, n - i), 0)^T$
  ]
  и #eq[
    $t = (s, underbrace(1\, ...\, 1, n))^T$
  ]
  Сводим теперь задачу KP на входе ${a_1, ..., a_n, s}$ к задаче распознавания для CVP на входе $(B, t, root(p, n))$. Здесь под $root(p, n)$ будем понимать любое рациональное число, принадлежащее интервалу
  #eq[
    $[root(p, n), root(p, n + 1))$
  ]
  при $p = +oo => lim_(p -> oo) root(p, n) = 1$ -- подставляем везде.

  Сначада предположим, что существует решение задачи KP, то есть при некоторых $x_i in {0, 1}$:
  #eq[
    $sum_(i = 1)^n x_i a_i = s$
  ]
  Тогда
  #eq[
    $B x - t = mat(
      sum_(i = 1)^n a_i x_i - s;
      2 x_1 - 1; dots.v;
      2 x_n - 1
    )$
  ]
  И $p$-я степень $l_p$ нормы этого вектора равна
  #eq[
    $norm(B x - t)_p^p = underbrace(abs(sum_(i = 1)^n a_i x_i - s)^p, 0) + underbrace(sum_(i = 1)^n abs(2x_i - 1)^p, plus.minus 1) = n$
  ]
  Поэтому расстояние от вектора $t$ до решётки $angle.l B angle.r <= root(p, n)$ и следовательно результатом задачи распознавания CVP будет YES.

  Предположим теперь, что результатом задачи распознавания CVP на входе $(B, t, root(p, n))$ будет YES. Следовательно, существует такой целочисленный вектор $x$, такой, что $norm(B x - t)_p <= root(p, n)$. Тогда
  #eq[
    $norm(B x - t)_p^p = abs(sum_(i = 1)^n a_i x_i - s)^p + sum_(i = 1)^n abs(2x_i - 1)^p <= n$
  ]
  Причём для второго слагаемого выполняется соотношение $sum_(i = 1)^n abs(2 x_i - 1)^p = n$, поскольку все величины $2 x_i - 1$ по модулю равны 1. Поэтому данное неравенство возможно лишь когда $s = sum_(i = 1)^n a_i x_i$.
]

#lemma[
  Пусть $v = sum_(i = 1)^n c_i b_i$ -- кратчайший вектор в решётке $Lambda = angle.l B angle.r$. Тогда при некотором i коэффициент $c_i$ нечётный.
] <exists_odd>

#proof[
  Пусть $v = sum_(i = 1)^n c_i b_i$ -- кратчайший вектор в решётке и все коэффициенты $c_i$ чётные. Тогда вектор
  #eq[
    $1 / 2 v = sum_(i = 1)^n 1 / 2 c_i b_i$
  ]
  также вектор решётки и его длина вдвое меньше длины вектора $v$.
]

#lemma[
  Пусть $v = sum_(i = 1)^n c_i b_i$ -- вектор в решётке $Lambda = angle.l B angle.r$, причём для некоторого $j$ число $c_j$ нечётно. Тогда
  #eq[
    $u = (c_j + 1) / 2 (2 b_j) + sum_(i != j)^n c_i b_i$
  ]
  принадлежит решётке
  #eq[
    $B^((j)) = (b_1, ..., b_(j - 1), 2 b_j, b_(j + 1), ..., b_m)$
  ]
  и расстояние между $u, b_j$ равно длине вектора $v$.
] <even_to_odd>

#lemma[
  Пусть $u = c'_j (2 b_j) + sum_(i != j)^n c_i b_i$ -- вектор в решётке $Lambda = angle.l B^((j)) angle.r$. Тогда
  #eq[
    $v = (2 c'_j - 1)b_j + sum_(i != j)^n c_i b_i$
  ]
  ненулевой вектор решётки $angle.l B angle.r$ и длина $v$ равна расстоянию между $u$ и $b_j$.
] <odd_to_even>

#theorem[
  Задача SVP полиномиально эквивалентна CVP
]
#proof[
  По заданному базису $B = (b_1, ..., b_m)$ построим $m$ задач CVP следующим образом. Задача с номером $j$ задаётся базисом
  #eq[
    $B^((j)) = (b_1, ..., b_(j - 1), 2 b_j, b_(j + 1), ..., b_m)$
  ]
  и вектором $b_j$. В задаче поиска используем $m$ обращений к оракулу для CVP и из полученных $m$ ответов $v_i, i = 1, ..., m$ выбираем такой $b_j$, на котором достигается минимум $norm(v_i - b_i)$. Для задачи распознавания в качестве входа добавляется параметр $r$ и выдаётся ответ YES, тогда и только тогда, когда хотя бы в одной из задач получен ответ YES.

  Докажем корректность в случае задачи распознавания.

  Пусть на входе $(B, r)$ задачи SVP получаем YES и $v = sum_(i = 1)^n c_i b_i$ -- кратчайший вектор в решётке $angle.l B angle.r$. Тогда $norm(v) <= r$ и согласно @exists_odd при некотором коэффициенте $c_j$ нечётный.

  Тогда, согласно @even_to_odd вектор
  #eq[
    $u = (c_j + 1) / 2 (2 b_j) + sum_(i != j)^n c_i b_i$
  ]
  принадлежит решётке $angle.l B^((j)) angle.r$ и расстояние $norm(u - b_j) = norm(v) <= r$, что означает исход YES для запроса оракула на входе $(B^((j)), b_j, r)$.

  Предположим теперь, что на входе $(B^((j)), b_j, r)$ задачи CVP получаем YES, то есть при некотором $u in angle.l B angle.r$ выполняется соотношение $norm(u - b_j) <= r$. Тогда согласно лемме @odd_to_even для ненулевого вектора
  #eq[
    $v = (2c'_j - 1) b_k + sum_(i != j)^n c_i b_i$
  ]
  решётки выполняется нужное соотношение, что означает исход YES, для задачи SVP.
]
